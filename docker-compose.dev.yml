services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CORS_ORIGIN=http://localhost:5173
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - CORS_ORIGIN=http://localhost:5173
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=feedy
      - DB_PASSWORD=feedy123
      - DB_DATABASE=feedy
    depends_on:
      - postgres
      - llm-service

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=feedy@example.com
      - PGADMIN_DEFAULT_PASSWORD=feedy123
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - postgres
      - backend

  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=feedy
      - POSTGRES_PASSWORD=feedy123
      - POSTGRES_DB=feedy
    volumes:
      - postgres_data:/var/lib/postgresql/data

  llm-service:
    build:
      context: ./llm
      dockerfile: Dockerfile
    ports:
      - "11434:11434"
    volumes:
      - llm-models-dev:/models
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 6G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  llm-models-dev:
